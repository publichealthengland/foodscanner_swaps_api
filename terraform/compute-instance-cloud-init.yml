#cloud-config

packages:
  - docker.io
  - curl
  - unzip

# create the docker group
groups:
  - docker
  
users:
  - name: ubuntu
    groups: docker
    home: /home/ubuntu
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ${ssh_public_key}

# Add default auto created user to docker group
system_info:
  default_user:
    groups: [docker]

# Need to create the cron files here instead of inside write_files, otherwise get issues with it wanting to shutdown during setup.
# https://docs.docker.com/engine/reference/commandline/login/
runcmd:
  - sudo apt update
  - sudo apt upgrade -y
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install -i /usr/local/aws-cli -b /usr/local/bin
  - aws configure set aws_access_key_id ${iam_ecr_key}
  - aws configure set aws_secret_access_key ${iam_ecr_secret}
  - aws configure set default.region eu-west-2
  - aws ecr get-login-password --region eu-west-2 | docker login --username ${docker_registry_user} --password-stdin ${docker_registry}
  - docker pull ${docker_image_name}
  - echo 'docker run  -e "SWAPS_CACHE_DB_HOST=${swaps_database_host}" -e "SWAPS_CACHE_DB_NAME=${swaps_database_name}" -e "SWAPS_CACHE_DB_USER=${swaps_database_username}" -e "SWAPS_CACHE_DB_PASSWORD=${swaps_database_password}" -e "SWAPS_CACHE_DB_PORT=${swaps_database_port}" -e "ETL_DB_HOST=${etl_database_host}" -e "ETL_DB_NAME=${etl_database_name}" -e "ETL_DB_USER=${etl_database_username}" -e "ETL_DB_PASSWORD=${etl_database_password}" -e "ETL_DB_PORT=${etl_database_port}" -e "ETL_TABLE_NAME=${etl_database_table}" ${docker_image_name}' > /root/run-compute-engine.sh
  - echo "@reboot /bin/bash /root/run-compute-engine.sh || true && /usr/sbin/shutdown -h now 2> /root/errors.log\n" > /root/cron.conf
  - crontab /root/cron.conf
  - rm /root/cron.conf
  - shutdown -h now